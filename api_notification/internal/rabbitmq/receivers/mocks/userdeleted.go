// Code generated by MockGen. DO NOT EDIT.
// Source: userdeleted.go

// Package mock_receivers is a generated GoMock package.
package mock_receivers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockuser_deleted_service is a mock of user_deleted_service interface.
type Mockuser_deleted_service struct {
	ctrl     *gomock.Controller
	recorder *Mockuser_deleted_serviceMockRecorder
}

// Mockuser_deleted_serviceMockRecorder is the mock recorder for Mockuser_deleted_service.
type Mockuser_deleted_serviceMockRecorder struct {
	mock *Mockuser_deleted_service
}

// NewMockuser_deleted_service creates a new mock instance.
func NewMockuser_deleted_service(ctrl *gomock.Controller) *Mockuser_deleted_service {
	mock := &Mockuser_deleted_service{ctrl: ctrl}
	mock.recorder = &Mockuser_deleted_serviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockuser_deleted_service) EXPECT() *Mockuser_deleted_serviceMockRecorder {
	return m.recorder
}

// OnUserDeleted mocks base method.
func (m *Mockuser_deleted_service) OnUserDeleted(ctx context.Context, userid string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnUserDeleted", ctx, userid)
}

// OnUserDeleted indicates an expected call of OnUserDeleted.
func (mr *Mockuser_deleted_serviceMockRecorder) OnUserDeleted(ctx, userid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnUserDeleted", reflect.TypeOf((*Mockuser_deleted_service)(nil).OnUserDeleted), ctx, userid)
}
